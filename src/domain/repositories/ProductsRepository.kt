package domain.repositories

import domain.models.Product
import util.*

class ProductsRepository {
    private val products: List<Product> = listOf(
        Product(1, CATEGORY_PRODUCT_APPLIANCES, "REGRIGERADORA SAMSUMG", "SAMX415L", 1500.99),
        Product(2, CATEGORY_PRODUCT_APPLIANCES, "REGRIGERADORA LG", "SAMZLSDJ360L", 1100.90),
        Product(3, CATEGORY_PRODUCT_APPLIANCES, "REGRIGERADORA ELEXTROLUX", "SAQQSDJ390L", 1450.90),
        Product(4, CATEGORY_PRODUCT_APPLIANCES, "REGRIGERADORA INDURAMA", "PDNAJEFXL", 1000.90),
        Product(5, CATEGORY_PRODUCT_APPLIANCES, "REGRIGERADORA MABE", "DWNIFCNEI", 1999.90),
        Product(6, CATEGORY_PRODUCT_APPLIANCES, "COCINA ELEXTROLUX", "CNBJSBNS", 2500.90),
        Product(7, CATEGORY_PRODUCT_APPLIANCES, "COCINA SOLE", "DVRV557C", 1250.90),
        Product(8, CATEGORY_PRODUCT_APPLIANCES, "COCINA INDURAMA", "DWSKNMKS", 1280.90),
        Product(9, CATEGORY_PRODUCT_BEDROOM, "ROPERO CAOBA 6 PUERTAS", "EKPKA54", 1210.90),
        Product(10, CATEGORY_PRODUCT_BEDROOM, "CAMA BOX TARIMA 2 PLAZAS", "3SWDAS", 1240.90),
        Product(11, CATEGORY_PRODUCT_BEDROOM, "ROPERO 10 PUERTAS CEDRO", "ASSD67A", 1250.90),
        Product(12, CATEGORY_PRODUCT_BEDROOM, "COMODA 8 PUERTAS CAOBA", "1243DSSKS", 750.90),
        Product(13, CATEGORY_PRODUCT_WATERANDDRINKS, "CIELO 3L", "CIELO3MSA", 4.50),
        Product(14, CATEGORY_PRODUCT_WATERANDDRINKS, "CIELO 1L", "CIESFCZ", 2.50),
        Product(15, CATEGORY_PRODUCT_WATERANDDRINKS, "GUARANA 3L", "GUAFDEBJHB", 8.50),
        Product(16, CATEGORY_PRODUCT_WATERANDDRINKS, "COCA COLA 3L", "COASXANS", 12.50),
        Product(17, CATEGORY_PRODUCT_WATERANDDRINKS, "INKA COLA 3L", "INKABHAXVHA", 12.50),
        Product(18, CATEGORY_PRODUCT_WATERANDDRINKS, "PESPI", "PEPQSABH", 10.50),
        Product(19, CATEGORY_PRODUCT_TECHNOLOGIES, "LAPTOP ACER I7", "ACERXSADD", 2410.50),
        Product(20, CATEGORY_PRODUCT_TECHNOLOGIES, "LAPTOP ASUS I9", "ASUXXXJIA", 3910.50),
        Product(21, CATEGORY_PRODUCT_TECHNOLOGIES, "LAPTOP HP I9", "HPPDSXXS", 2910.50),
        Product(22, CATEGORY_PRODUCT_TECHNOLOGIES, "LAPTOP HP I5", "HPPDSXXS", 1910.50),
        Product(23, CATEGORY_PRODUCT_TECHNOLOGIES, "GALAXY S10 SAMSUMG", "SAMSJNS", 1710.50),
        Product(24, CATEGORY_PRODUCT_TECHNOLOGIES, "GALAXY S20 SAMSUMG", "SAMSSCSDD", 2710.50),
        Product(25, CATEGORY_PRODUCT_TECHNOLOGIES, "IPHONE APPLE 7", "APPCNSJN", 1220.50),
        Product(26, CATEGORY_PRODUCT_BAKERYANDPASTRY, "PAN CARAMANDUNGA", "X1KG", 8.50),
        Product(27, CATEGORY_PRODUCT_BAKERYANDPASTRY, "PAN BAGGET", "X1UNID", 2.50),
        Product(28, CATEGORY_PRODUCT_BAKERYANDPASTRY, "PAN PETI PAN", "X1UNID", 1.50),
        Product(29, CATEGORY_PRODUCT_BAKERYANDPASTRY, "TORTA M SELVA NEGRA", "X1UNID", 50.90),
        Product(30, CATEGORY_PRODUCT_BAKERYANDPASTRY, "TORTA M CHANTILLI", "X1UNID", 68.90),
        Product(31, CATEGORY_PRODUCT_BAKERYANDPASTRY, "TORTA P CHOCOLATE", "X1UNID", 35.90),
        Product(32, CATEGORY_PRODUCT_BAKERYANDPASTRY, "TORTA G 3LECHES", "X1UNID", 90.90),
        Product(33, CATEGORY_PRODUCT_GROCERY, " DETERGENTE ACE", "1KG", 12.90),
        Product(34, CATEGORY_PRODUCT_GROCERY, "DETERGENTE MAGIA BLANCA", "1KG", 22.90),
        Product(35, CATEGORY_PRODUCT_GROCERY, "LEGIA", "1LT", 8.90),
        Product(36, CATEGORY_PRODUCT_GROCERY, "PAÑALES PAMPERS", "100UNID", 78.90),
        Product(37, CATEGORY_PRODUCT_GROCERY, "PAÑALES HUGGIES", "100UNID", 90.90),
        Product(38, CATEGORY_PRODUCT_GROCERY, "PAÑALES HUGGIES", "50UNID", 40.90),
        Product(39, CATEGORY_PRODUCT_GROCERY, "PAÑALES BABYSEC", "25UNID", 30.90),
        Product(40, CATEGORY_PRODUCT_GROCERY, "AZUCAR", "1KG", 3.90),
        Product(41, CATEGORY_PRODUCT_GROCERY, "ARROZ", "1KG", 4.90),
        Product(42, CATEGORY_PRODUCT_GROCERY, "LENTEJA", "1KG", 2.50),
        Product(43, CATEGORY_PRODUCT_GROCERY, "ALVERJA", "1KG", 2.10)
    )

    fun getProductsByCategoryId(categoryId: Int): List<Product> {
        return products.filter {
            it.idCategory == categoryId
        }
    }

    fun getProductById(id: Int): Product {
        return products.first {
            it.id == id
        }
    }
}
